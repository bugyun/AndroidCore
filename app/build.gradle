//noinspection GradleDynamicVersion
apply plugin: 'com.android.application'


def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}


android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.finupgroup.androidcore"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        flavorDimensions "debug", "release"

        externalNativeBuild {
            cmake {
                // 配置CMake可选参数
                arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"

                // 为C 编译器设置可选 flags
                cFlags "-D_EXAMPLE_C_FLAG1", "-D_EXAMPLE_C_FLAG2"

                // 为c++编译器设置flag ：使支持格式化 macro constants
                cppFlags "-D__STDC_FORMAT_MACROS"
            }
        }
        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            // abiFilters 后面的ABI类型即为要打包进apk的ABI类型，除此以外都不打包进apk里
            abiFilters 'armeabi'//, 'armeabi-v7a', 'x86', 'x86_64', 'arm64-v8a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }


    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug { // debug模式
            buildConfigField "int", "LOG_LEVEL", "6"//全部显示log日志
            buildConfigField "boolean", "IS_DEBUG", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
        }
        release {
            buildConfigField "int", "LOG_LEVEL", "0"//不显示log日志
            buildConfigField "boolean", "IS_DEBUG", "false"
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        // 输出apk名称为boohee_v1.0_2015-01-15_wandoujia.apk
//                        def fileName = "Bestbuy_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
//                        output.outputFile = new File(outputFile.parent, fileName)
//                    }
//                }
//            }
        }
    }

    compileOptions {
        sourceCompatibility SOURCE_COMPATIBILITY
        targetCompatibility TARGET_COMPATIBILITY
    }

    dexOptions {
        javaMaxHeapSize JAVA_MAX_HEAPSIZE

    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {    // 取消掉系统对.9图片的检查
        cruncherEnabled = false
        useNewCruncher = false

    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

//下面的方式在android studio 3.0 以上失效
    productFlavors {
        demo {
            dimension "debug"
//            applicationIdSuffix ".demo"
        }
        prod {
            dimension "release"
        }
    }

//    //多渠道打包
//    productFlavors {
//        bestbuy {
//            dimension "default"
//        }// 官网包
//        umeng {
//            dimension "default"
//        }//友盟推送更新
//        _360 {
//            dimension "default"
//        }//360
//        tencent {
//            dimension "default"
//        }//腾讯
//        baidu {
//            dimension "default"
//        }//百度
//        _91 {
//            dimension "default"
//        }//
//        wandoujia {
//            dimension "default"
//        }//豌豆荚
//        anzhuo {
//            dimension "default"
//        }//
//        anzhi {
//            dimension "default"
//        }//
////        jifeng {}//
////        yingyonghui {}//应用汇
////        mumayi {}
////        nduoa {}
////        googleplay {}
////        suning {}//
////        sogou {}
////        zhongyong {}//众用助手
////        MMshequ {}//MM社区
////        uc {}
////        liantong {}//联通沃社区
////        xiaomi {}//xiaomi
////        lenovomm {}
////        Mstore {}//魅族Mstore
////        huawei {}//
////        zhongxing {}//中兴
////        oppope {}
//    }
//    productFlavors.all {
//        flavor -> flavor.manifestPlaceholders = [BUGLY_APP_CHANNEL: name]
//    }


    splits {//拆分apk
        abi {//把一个apk拆成几个apk，每个apk仅包含特定的ABI
            enable true//是否启用拆分
            reset()// include和exclude之前先reset一下
            include 'armeabi'//, 'armeabi-v7a'  // 指定只包含的abi库
            universalApk false   // 指定不产生一个包含所有abi的apk
        }
    }
}

//implementation	compile
//api	compile
//compileOnly	provided
//runtimeOnly	apk
// annotationProcessor 'com.google.dagger:dagger-compiler:<version-number>'
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation project(':baselibrary')
    implementation project(':counttime')
    implementation project(':httpbird')
    implementation 'com.android.support:appcompat-v7:26.1.0'

    implementation 'com.android.support:design:26.1.0'

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'
    implementation 'com.tencent.bugly:crashreport:2.6.5'
    implementation 'com.gyf.barlibrary:barlibrary:2.2.9'
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.2-alpha-5'
    //If you use the special Header
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    testCompile 'junit:junit:4.12'

    //For Lifecycles, LiveData, and ViewModel, add:
    implementation "android.arch.lifecycle:runtime:1.0.0"
    implementation "android.arch.lifecycle:extensions:1.0.0-beta1"
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0-beta1"

    //For Room, add:
    implementation "android.arch.persistence.room:runtime:1.0.0-alpha9-1"
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0-alpha9-1"

    //For testing Room migrations, add:
    testCompile "android.arch.persistence.room:testing:1.0.0-alpha9-1"

    //For Room RxJava support, add:
    implementation "android.arch.persistence.room:rxjava2:1.0.0-alpha9-1"

    implementation 'com.lzy.widget:view-core:0.2.3'
}
